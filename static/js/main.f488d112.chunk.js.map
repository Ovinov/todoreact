{"version":3,"sources":["components/todo-input/todo-input.jsx","components/todo-item/todo-item.jsx","components/todo-list/todo-list.jsx","containers/todo/todo.jsx","actions/actionCreator.js","constants.js","components/title/title.jsx","App.js","serviceWorker.js","store.js","reducers/tasks.js","reducers/index.js","index.js"],"names":["ToDoInput","_ref","value","onChange","onKeyPress","react_default","a","createElement","className","placeholder","defaultProps","ToDoItem","text","isCompleted","removeTask","id","checkTask","onClick","ToDoList","tasksList","map","_ref2","todo_item_todo_item","key","ToDo","state","activeFilter","taskText","handleInputChange","target","_this","setState","addTast","length","props","Date","getTime","this","_this$props","tasks","isTasksExist","todo_input_todo_input","todo_list_todo_list","Component","connect","type","Title","title","defaultProp","App","react","components_title_title","todo_todo","Boolean","window","location","hostname","match","preloadedState","TASKS","arguments","undefined","concat","Object","toConsumableArray","filter","task","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f488d112.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-input.css';\r\n\r\nconst ToDoInput =({ value, onChange, onKeyPress}) =>(\r\n  <div >\r\n  <input\r\n  className=\"todo-input\"\r\n  placeholder=\"Новая задача\"\r\n  onChange={onChange}\r\n  value={value}\r\n  onKeyPress={onKeyPress}\r\n  />\r\n  </div>\r\n);\r\n\r\nToDoInput.propTypes ={\r\n  onChange: PropTypes.func,\r\n  onKeyPress: PropTypes.func,\r\n  value: PropTypes.string,\r\n}\r\n\r\nToDoInput.defaultProps = {\r\n  onChange: () => {},\r\n  onKeyPress: () =>{},\r\n  value: '',\r\n}\r\n\r\nexport default ToDoInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-item.css'\r\n\r\nconst ToDoItem = ({ text, isCompleted, removeTask, id, checkTask }) => (\r\n  <li>\r\n  <div id=\"x\" onClick={() => removeTask(id)}></div>\r\n  <span onClick={()=> checkTask(id)} className={isCompleted ? 'check':'checkout'}> {text}</span>\r\n  </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n  text: PropTypes.string,\r\n  isCompleted: PropTypes.bool,\r\n  removeTask: PropTypes.func,\r\n  id: PropTypes.string,\r\n\r\n}\r\n\r\nToDoItem.defaultProps = {\r\n  text: '',\r\n  isCompleted: false,\r\n  removeTask: ()=> {},\r\n  id:''\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ToDoItem from '../todo-item/todo-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst ToDoList = ({ tasksList, removeTask, checkTask }) => (\r\n  <ul>\r\n  {tasksList.map(({ id, text, isCompleted }) => (\r\n<ToDoItem checkTask={checkTask} removeTask={removeTask} id={id} key={id} text={text} isCompleted={isCompleted} />\r\n  ))}\r\n</ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n  tasksList: PropTypes.array,\r\n  removeTask: PropTypes.func,\r\n  checkTask: PropTypes.func,\r\n}\r\n\r\nToDoList.defaultProps ={\r\n  tasksList: [],\r\n  removeTask:() => {},\r\n  checkTask:() => {}\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTast, removeTask, checkTask } from '../../actions/actionCreator';\r\n\r\nimport ToDoInput from '../../components/todo-input/todo-input';\r\nimport ToDoList from '../../components/todo-list/todo-list';\r\n\r\n\r\nimport './todo.css'\r\n\r\n\r\n\r\nclass ToDo extends Component {\r\n  state = {\r\n    activeFilter: 'all',\r\n    taskText: ''\r\n  }\r\n  handleInputChange= ({ target:{ value } }) =>{\r\n    this.setState({\r\n      taskText: value,\r\n    })\r\n  }\r\n\r\n  addTast = ({ key}) =>{\r\n    const { taskText }= this.state;\r\n    if(taskText.length>3 && key === 'Enter'){\r\n      const { addTast } = this.props;\r\n      addTast((new Date()).getTime(), taskText, false);\r\n\r\n      this.setState({\r\n        taskText: '',\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    const { taskText} = this.state;\r\n    const  { tasks, removeTask, checkTask } = this.props;\r\n    const isTasksExist = tasks && tasks.length > 0;\r\n\r\n    return(\r\n      <div className=\"content\">\r\n      <ToDoInput onKeyPress={this.addTast} onChange={this.handleInputChange} value={taskText} />\r\n      {isTasksExist && <ToDoList checkTask={checkTask} tasksList={tasks} removeTask={removeTask} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  tasks: state.tasks,\r\n}), {addTast, removeTask, checkTask})(ToDo);\r\n","import { ADD_TASK, REMOVE_TASK, CHECK_TASK } from '../constants';\r\n\r\nexport const addTast = (id, text, isCompleted) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  text,\r\n  isCompleted\r\n});\r\n\r\nexport const removeTask = id => ({\r\n  type:  REMOVE_TASK,\r\n  id\r\n});\r\n\r\nexport const checkTask= id =>({\r\n  type: CHECK_TASK,\r\n  id\r\n})\r\n","export const ADD_TASK = 'ADD_TASK'\r\nexport const REMOVE_TASK = 'REMOVE_TASK'\r\nexport const CHECK_TASK = 'CHECK_TASK'\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title =({ title }) =>(\r\n  <h1 className=\"title\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes={\r\n  title: PropTypes.string,\r\n}\r\n\r\nTitle.defaultProp = {\r\n  title: 'Simple title',\r\n}\r\n\r\nexport default Title;\r\n","import React,{ Fragment } from 'react';\n\nimport ToDo from './containers/todo/todo';\nimport Title from './components/title/title';\n\nconst App = () => (\n  <Fragment className=\"content\">\n  <Title title=\"Список дел\"   />\n  <ToDo />\n  </Fragment>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, compose } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst composeEnhancers =\r\nprocess.env.NODE_ENV !== 'production' &&\r\ntypeof window === 'object' &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\nconst configureStore = preloadedState =>(\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(),\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import {ADD_TASK, REMOVE_TASK, CHECK_TASK} from '../constants';\r\n\r\nconst TASKS = [\r\n  {\r\n    id: 1,\r\n    text: 'Выучить html',\r\n    isCompleted: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: 'Выучить css',\r\n    isCompleted: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: 'Выучить js',\r\n    isCompleted: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    text: 'Выучить React',\r\n    isCompleted: false,\r\n  }\r\n];\r\n\r\nconst tasks =(state =TASKS, { id, text, isCompleted, type }) =>{\r\n  switch(type){\r\n    case ADD_TASK :\r\n    return [\r\n      ...state, {\r\n        id,\r\n        text,\r\n        isCompleted,\r\n      }\r\n    ];\r\n    case REMOVE_TASK:\r\n       return [...state].filter(task => task.id !== id);\r\n       case CHECK_TASK:\r\n       return [...state].map(task =>{\r\n         if(task.id === id){\r\n           task.isCompleted = !task.isCompleted;\r\n         }\r\n         return task;\r\n       });\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default tasks;\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './tasks.js';\r\n\r\nconst rootReducer = combineReducers({ tasks });\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nReactDOM.render((\n  <Provider store={store}>\n    <App className=\"content\" />\n  </Provider>\n), document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}